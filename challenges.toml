[nothing]
challenge = ""
result = """
┏ program: x e
  ┗  e"""

[one]
challenge = "1"
result = """
┏ program: x e
  ┗ x1 e
"""

[execzero]
challenge = "0 ."
result = """
┏ program: x e
  ┗ x e
"""

[execfive]
challenge = "5 ."
result = """
┏ program: x e
  ┗ x5 e
"""

[several]
challenge = """2 2 3  4 5
6
7
8
8 0 10 9999"""
result = """
┏ program: x e
  ┣ x270f
  ┣ xa
  ┣ x
  ┣ x8
  ┣ x8
  ┣ x7
  ┣ x6
  ┣ x5
  ┣ x4
  ┣ x3
  ┣ x2
  ┗ x2 e
"""

[declarevar]
challenge = """1 2 3 :hello 4 5"""
result = """
┏ program: x e
  ┣ x5
  ┣ x4
  ┣ hello
  ┣ x3
  ┣ x2
  ┗ x1 e
"""

[pull1]
challenge = """1 2 1 ,"""
result = """
┏ program: x e
  ┣ func
  ┣ x1
  ┣ x2
  ┗ x1 e
"""

[pull2]
challenge = """1 2 1 ,."""
result = """
┏ program: x e
  ┗ x1 e
"""

[pulltwo]
challenge = """1 2 2 ,."""
result = """
┏ program: x e
  ┗  e
"""

[pull4]
challenge = """1 1 ,."""
result = """
┏ program: x e
  ┗  e
"""

[pull3]
challenge = """1 "5 ;. " token. """
result = """
┏ program: x e
  ┣ x1
  ┣ x1
  ┣ x1
  ┣ x1
  ┗ x1 e
"""

[begintoken]
challenge = """ "1" token. """
result = """
┏ program: x e
  ┗ x1 e
"""

[doubledot1]
challenge = """1 2 1 ,.."""
result = """
┏ program: x e
  ┣ dot
  ┣ func
  ┣ x1
  ┣ x2
  ┗ x1 e
"""

[doubledot2]
challenge = """1 2 1 ,.. ."""
result = """
┏ program: x e
  ┗ x1 e
"""

[tripledot1]
challenge = """1 2 1 ,..."""
result = """
┏ program: x e
  ┣ dot
    ┗ dot e
  ┣ func
  ┣ x1
  ┣ x2
  ┗ x1 e
"""

[tripledot2]
challenge = """1 2 1 ,... .. ."""
result = """
┏ program: x e
  ┣ dot
  ┣ func
  ┣ x1
  ┣ x2
  ┗ x1 e
"""

[tripledot3]
challenge = """1 2 1 ,... .. . ."""
result = """
┏ program: x e
  ┗ x1 e
"""

[multidot]
challenge = """1 ... ...."""
result = """
┏ program: x e
  ┣ dot
    ┗ dot e
      ┗ dot e
  ┣ dot
    ┗ dot e
  ┗ x1 e
"""

[exclaim]
challenge = """1 3 0 <~."""
result = """
┏ program: x e
  ┣ x
    ┣ x3x2
    ┗ x1 e
  ┣ x3x2
  ┗ x1 e
"""

[emptyarray]
challenge = """1 3 [. ]."""
result = """
┏ program: x e
  ┣ x3
  ┗ x1 e
"""

[array1]
challenge = """1 3 [. 4 ]."""
result = """
┏ program: x e
  ┣ x3
    ┗ x4 e
  ┗ x1 e
"""

[doublearray]
challenge = """1 3 [. 6 [. 4 ]. ]."""
result = """
┏ program: x e
  ┣ x3
    ┗ x6 e
      ┗ x4 e
  ┗ x1 e
"""

[innerfunc1]
challenge = """1 3 [. 1 2 3 1 ,. ]."""
result = """
┏ program: x e
  ┣ x3
    ┣ x2
    ┗ x1 e
  ┗ x1 e
"""

[innerfunc2]
challenge = """1 3 [. 6 [. 1 2 3 1 ,. ]. ]."""
result = """
┏ program: x e
  ┣ x3
    ┗ x6 e
      ┣ x2
      ┗ x1 e
  ┗ x1 e
"""

[funcarray1]
challenge = """1 3 [. 6  ]. ."""
result = """
┏ program: x e
  ┣ x6
  ┗ x1 e
"""

[clone]
challenge = """1 3 0 <~. ."""
result = """
┏ program: x e
  ┣ x3
  ┣ x1
  ┣ x3
  ┗ x1 e
"""

[clonearr]
challenge = """1 2 3 4 5 0 <~. ."""
result = """
┏ program: x e
  ┣ x5
  ┣ x4
  ┣ x3
  ┣ x2
  ┣ x1
  ┣ x5
  ┣ x4
  ┣ x3
  ┣ x2
  ┗ x1 e
"""

[throw]
challenge = """1 3 [. 1 2 <-. ]."""
result = """
┏ program: x e
  ┣ x2
  ┣ x3
    ┗ x1 e
  ┗ x1 e
"""

[consume1]
challenge = """1 2 3 [. ->. 1 2 ]."""
result = """
┏ program: x e
  ┣ x3
    ┣ x2
    ┣ x1
    ┗ x2 e
  ┣ x2
  ┗ x1 e
"""

[consume2]
challenge = """1 2 3 [. 4 ->. [. ->. ]. 5 6 ]."""
result = """
┏ program: x e
  ┣ x3
    ┣ x6
    ┣ x5
    ┣ x2
      ┗ x4 e
    ┗ x4 e
  ┣ x2
  ┗ x1 e
"""

[descend1]
challenge = """1 3 0 <~. [. 4 ]."""
result = """
┏ program: x e
  ┣ x
    ┣ x4
    ┣ x3x2
    ┗ x1 e
  ┣ x3x2
  ┗ x1 e
"""

[descend2]
challenge = """1 3 0 <~. [. [. 2 ]. ]."""
result = """
┏ program: x e
  ┣ x
    ┣ x3x2
      ┗ x2 e
    ┗ x1 e
  ┣ x3x2
    ┗ x2 e
  ┗ x1 e
"""

[descend3]
challenge = """
1 3 0 <~. [. [. 2 <-. ]. ].
1 4 0 <~. [. [. 2 ]. ].
"""
result = """
┏ program: x e
  ┣ x
    ┣ x4x2
      ┗ x2 e
    ┣ x1
    ┣ x
      ┣ x2
      ┣ x3x2
      ┗ x1 e
    ┣ x3x2
    ┗ x1 e
  ┣ x4x2
    ┗ x2 e
  ┣ x1
  ┣ x
    ┣ x2
    ┣ x3x2
    ┗ x1 e
  ┣ x3x2
  ┗ x1 e
"""

[string1]
challenge = ' :hello '
result = """
┏ program: x e
  ┗ hello e
"""

[multilinestring]
challenge = """
\"hi
hello
123
\"
"""
result = """
┏ program: x e
  ┗ hi
hello
123
 e
"""

[simplestring]
challenge = ' 1 [. 3 ]. "hi" [. 7 ]. 5'
result = """
┏ program: x e
  ┣ x5
  ┣ x
    ┣ x7
    ┣ dot
    ┣ func
    ┗ x e
      ┗ hi e
  ┗ x1 e
    ┗ x3 e
"""

[string2]
challenge = ' 1 [. 1 2 3 ]. "hi" [. 5 6 7 ]. 15'
result = """
┏ program: x e
  ┣ xf
  ┣ x
    ┣ x7
    ┣ x6
    ┣ x5
    ┣ dot
    ┣ func
    ┗ x e
      ┗ hi e
  ┗ x1 e
    ┣ x3
    ┣ x2
    ┗ x1 e
"""

[string8]
challenge = """ 4 [. 5 6 ]. "essay about
\\"stuff\\" and \\"things\\"" [. 1 ]. 2 3"""
result = """
┏ program: x e
  ┣ x3
  ┣ x2
  ┣ x
    ┣ x1
    ┣ dot
    ┣ func
    ┗ x e
      ┗ essay about
"stuff" and "things" e
  ┗ x4 e
    ┣ x6
    ┗ x5 e
"""

[string3]
challenge = ' "hi" :hi '
result = """
┏ program: x e
  ┣ hi
  ┗ hi e
"""

[string4]
challenge = ' "hi" '
result = """
┏ program: x e
  ┗ hi e
"""

[string7]
challenge = ' "hi how are you" '
result = """
┏ program: x e
  ┗ hi how are you e
"""

[string5]
challenge = ' "\"" '
result = """
┏ program: x e
  ┗ " e
"""

[string6]
challenge = ':"'
result = """
┏ program: x e
  ┗ " e
"""

[variable1]
challenge = ' 2 :hi 3 hi'
result = """
┏ program: x e
  ┣ x2
  ┣ x3
  ┣ hi
  ┗ x2 e
"""

[variable2]
challenge = ' 2 :hi 3 [. hi ].'
result = """
┏ program: x e
  ┣ x3
    ┗ x2 e
  ┣ hi
  ┗ x2 e
"""

[printer]
challenge = ' 1 2 8 [. 1 2 3 0 [. "HI" print .. ]. :" 6 7 8 ]. 4 3'
result = """
┏ program: x e
  ┣ x3
  ┣ x4
  ┣ HI
  ┣ x2
  ┗ x1 e
"""

[printing]
challenge = ' "print this stuff out\n" print. '
result = """
print this stuff out
┏ program: x e
  ┗  e
"""

[descend4]
challenge = """1 3 0 <~. [. [. 2 <-. ]. <-. ]. """
result = """
┏ program: x e
  ┣ x2
  ┣ x
    ┣ x3x2
    ┗ x1 e
  ┣ x3x2
  ┗ x1 e
"""

[interior1]
challenge = """1 2 3 [. 4 [. 5 :c ]. :b ]. :b :c."""
result = """
┏ program: x e
  ┣ x5
  ┣ x3
    ┣ b
    ┗ x4 e
      ┣ c
      ┗ x5 e
  ┣ x2
  ┗ x1 e
"""

[interior2]
challenge = """1 2 3 [. 4 [. 5 [. 6 :d ]. :c ]. :b ]. :b :c :d."""
result = """
┏ program: x e
  ┣ x6
  ┣ x3
    ┣ b
    ┗ x4 e
      ┣ c
      ┗ x5 e
        ┣ d
        ┗ x6 e
  ┣ x2
  ┗ x1 e
"""

[scanner]
challenge = """0 2 :hello :hello : ."""
result = """
┏ program: x e
  ┣ x2
  ┣ hello
  ┣ x2
  ┗ x e
"""

[length]
challenge = """2 2 2 2 length . 0 [. 1 2 3 ]. [. length . <-. ]."""
result = """
┏ program: x e
  ┣ x3
  ┣ x
    ┣ x3
    ┣ x2
    ┗ x1 e
  ┣ x4
  ┣ x2
  ┣ x2
  ┣ x2
  ┗ x2 e
"""

[removal]
challenge = """0 2 3 [. 1 1 ,. ]. 5 :hello 4 [. 1 2 1 ,. hello ]. """
result = """
┏ program: x e
  ┣ x4
    ┣ x5
    ┗ x1 e
  ┣ hello
  ┣ x5
  ┣ x3
  ┣ x2
  ┗ x e
"""

[twelve]
challenge = "12"
result = """
┏ program: x e
  ┗ xc e
"""

[exec]
challenge = """0 1 2 3 0 [. "12" token. 1 ]. 7"""
result = """
┏ program: x e
  ┣ x7
  ┣ x
    ┣ x1
    ┗ xc e
  ┣ x3
  ┣ x2
  ┣ x1
  ┗ x e
"""

[multiplier]
challenge = """8 9 ; ."""
result = """
┏ program: x e
  ┣ x8
  ┣ x8
  ┣ x8
  ┣ x8
  ┣ x8
  ┣ x8
  ┣ x8
  ┣ x8
  ┗ x8 e
"""

[enclose1]
challenge = """8 [. 3 ;.. ]. :by3 4 by3."""
result = """
┏ program: x e
  ┣ x4
  ┣ x4
  ┣ x4
  ┣ by3
  ┗ x8 e
    ┣ dot
    ┣ func
    ┗ x3 e
"""

[program]
challenge = """
1
program.
2
"""
result = """
┏ program: x e
  ┣ x2
  ┣ program: x e
  ┗ x1 e
"""

[internalcall]
challenge = """
0 [. 1 2 3 ]. :base
0 [. base . 5 ]. :sub1
6 sub1.
"""
result = """
┏ program: x e
  ┣ x5
  ┣ x3
  ┣ x2
  ┣ x1
  ┣ x6
  ┣ sub1
  ┣ x
    ┣ x5
    ┣ x3
    ┣ x2
    ┗ x1 e
  ┣ base
  ┗ x e
    ┣ x3
    ┣ x2
    ┗ x1 e
"""

[externalcall]
challenge = """
0 [. .. 1 ]. :sub1
5 0 [. "hello\n" print.. ]. sub1.
"""
result = """
hello
┏ program: x e
  ┣ x1
  ┣ x5
  ┣ sub1
  ┗ x e
    ┣ x1
    ┗ dot e
"""

[tailrecursive]
challenge = """
0 [. .. 1 -.. ]. :sub1
5 sub1 sub1 sub1.
"""
result = """
┏ program: x e
  ┣ x2
  ┣ sub1
  ┗ x e
    ┣ dot
    ┣ func
    ┣ x1
    ┗ dot e
"""

# [cloneby]
# challenge = """
# 1 2 3 4 5 
# [. ->. 0 [. swap.. ;..]. ..].
# :cloner2
# 3 cloner2.
# 9
# 2 cloner2.
# 9
# 0 cloner2.
# """
# result = """
# ┏ program: x e0
#   ┣ x9
#   ┣ x4
#   ┣ x4
#   ┣ x9
#   ┣ x4
#   ┣ x4
#   ┣ x4
#   ┣ cloner2
#   ┣ x5
#     ┣ dot
#     ┣ x
#       ┣ dot
#       ┣ func
#       ┣ dot
#       ┗ func e
#     ┗ x4 e
#   ┣ x4
#   ┣ x3
#   ┣ x2
#   ┗ x1 e
# """

# [dotter]
# challenge = """
# 1 2 3 4 ... 5 
# [. ->. 0 [. swap.. ;..]. ..].
# :cloner2
# 3 cloner2.
# 9
# 2 cloner2.
# 9
# 0 cloner2.
# """
# result = """
# ┏ program: x e0
#   ┣ x9
#   ┣ dot
#   ┣ dot
#   ┣ x9
#   ┣ dot
#   ┣ dot
#   ┣ dot
#   ┣ cloner2
#   ┣ x5
#     ┣ dot
#     ┣ x
#       ┣ dot
#       ┣ func
#       ┣ dot
#       ┗ func e
#     ┗ dot e
#       ┗ dotx2 e
#   ┣ dot
#     ┗ dotx2 e
#   ┣ x4
#   ┣ x3
#   ┣ x2
#   ┗ x1 e
# """

[typer]
challenge = """
0 1 2 #.
0 [. 1 2 3 ]. 4 [. 5 6 7 ]. #.
0 [. 1 2 [. 8 ]. 3 ]. 4 [. 5 6 [. 9 ]. 7 ]. #.
0 [. 1 [. 8 ]. 2 3 ]. 4 [. 5 6 [. 9 ]. 7 ]. #.
"""
result = """
┏ program: x e
  ┣ x
  ┣ x1
  ┣ x1
  ┣ x1
  ┗ x e
"""

[enterer]
challenge = """
3 4 [. 1 [. 5 6 ]. 2 ]. 0 <~.
8 9 [. 10 [. 11 12 ]. 13 ]. 0 <~. ~>.
0 <~. ~>. <~. ~>.
"""
result = """
┏ program: x e
  ┣ x
    ┣ xcx2
    ┗ xb e
  ┣ x
    ┣ xdx2
    ┗ xa e
      ┣ xcx2
      ┗ xb e
  ┣ x9
    ┣ xdx2
    ┗ xa e
      ┣ xcx2
      ┗ xb e
  ┣ x8
  ┣ x
    ┣ x4x2
      ┣ x2
      ┗ x1 e
        ┣ x6
        ┗ x5 e
    ┗ x3 e
  ┣ x4x2
    ┣ x2
    ┗ x1 e
      ┣ x6
      ┗ x5 e
  ┗ x3 e
"""

[choice1]
challenge = """
3 1 2 ?.
0 1 2 ?.
0 8 0 [. 2 3 4 ]. ?.
1 8 0 [. 2 3 4 ]. ?.
"""
result = """
┏ program: x e
  ┣ x
    ┣ x4
    ┣ x3
    ┗ x2 e
  ┣ x1
  ┣ x8
  ┣ x
  ┣ x1
  ┣ x
  ┣ x2
  ┗ x3 e
"""

[internalexec]
challenge = """
1 2 3 [. 7 4 5 ; 6 ].
0 <~. ~>. <~. [. . ].
"""
result = """
┏ program: x e
  ┣ x
    ┣ x4
    ┣ x4
    ┣ x4
    ┣ x4
    ┣ x4
    ┗ x7x2 e
  ┣ x3
    ┣ x6
    ┣ func
    ┣ x5
    ┣ x4
    ┗ x7x2 e
  ┣ x2
  ┗ x1 e
"""

[factorialrecursive]
challenge = """
1 :num
0 [.
  0 [. "!" print.. ]. :\" 2 ,..
  2 ;.. 1 -..
  0 [. 1 ,.. 1 ].
  0 [. :factorial :.. .. ]. ?.. ..
  *..
].
:factorial
4 factorial.
"""
result = """
┏ program: x e
  ┣ x18
  ┣ factorial
  ┣ !
  ┣ num
  ┗ x1 e
"""

[padder]
challenge = """
\"123\" 5 pad.
0 [. 
\"hello hi\" 15 pad.
].
"""
result = """
┏ program: x e
  ┣ x
    ┗ hello hi        e
  ┗ 123   e
"""

[strconcatter]
challenge = """
\"123\"
\"hello hi\"
concat.
"""
result = """
┏ program: x e
  ┗ 123hello hi e
"""

[threads]
challenge = """
0
0 [.
  1 64 ;.
  63 ,..
"thread 1\n" print.. ].
addthread.
0 [. 2 "thread 2\n" print.. ].
addthread.
0 [. 3 "thread 3\n" print.. ].
addthread.
0 [. 4 "thread 4\n" print.. ].
addthread.
"""
result = """
thread 2
┏ program: x e
  ┗ x2 e
thread 3
┏ program: x e
  ┗ x3 e
thread 1
┏ program: x e
  ┗ x1 e
┏ program: x e
  ┗ x e
thread 4
┏ program: x e
  ┗ x4 e
"""
